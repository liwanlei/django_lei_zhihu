# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-07 09:05
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ZUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('qq', models.IntegerField(blank=True, unique=True, verbose_name='qq')),
                ('mobile', models.IntegerField(blank=True, unique=True, verbose_name='手机号')),
                ('login_status', models.BooleanField(default=False, verbose_name='是否锁定')),
                ('is_login', models.BooleanField(default=False, verbose_name='是否登录')),
                ('info', models.TextField(blank=True, null=True, verbose_name='个人介绍')),
                ('work', models.CharField(blank=True, max_length=60, null=True, verbose_name='公司')),
                ('zhiwei', models.CharField(blank=True, max_length=60, null=True, verbose_name='职位')),
                ('home', models.CharField(blank=True, max_length=25, null=True, verbose_name='居住地')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='书名')),
                ('auth', models.CharField(max_length=54, verbose_name='作者')),
                ('zishu', models.IntegerField(blank=True, null=True, verbose_name='字数')),
                ('sale', models.FloatField(blank=True, null=True, verbose_name='售价')),
                ('img', models.URLField(blank=True, null=True, verbose_name='图片')),
                ('daoyan', models.TextField(verbose_name='导言')),
                ('mulu', models.TextField(verbose_name='导言')),
                ('tejia', models.FloatField(blank=True, null=True, verbose_name='活动价')),
                ('is_tui', models.BooleanField(default=False, verbose_name='推荐')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('status', models.BooleanField(default=False, verbose_name='状态')),
                ('add_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '书名',
                'verbose_name_plural': '书名',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Bookcomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connt', models.TextField(verbose_name='内容')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('status', models.BooleanField(default=False, verbose_name='状态')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coustmer.Book')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coustmer.Bookcomment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '书的评论',
                'verbose_name_plural': '书的评论',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Bookfenlei',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='分类名')),
                ('addtime', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('sattus', models.BooleanField(default=False, verbose_name='状态')),
                ('level', models.IntegerField(default=999, verbose_name='等级')),
                ('adduser', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('book', models.ManyToManyField(to='coustmer.Book')),
            ],
            options={
                'verbose_name': '书分类',
                'verbose_name_plural': '书分类',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Caogao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False, verbose_name='状态')),
            ],
            options={
                'verbose_name': '草稿',
                'verbose_name_plural': '草稿',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Commenthuati',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='话题评论时间')),
                ('comment', models.TextField(verbose_name='话题评论内容')),
                ('dianzan', models.IntegerField(default=0, verbose_name='点赞')),
                ('status', models.BooleanField(default=False, verbose_name='是否冻结')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coustmer.Commenthuati')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '话题评论',
                'verbose_name_plural': '话题评论',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Commentxin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='评论时间')),
                ('comment', models.TextField(verbose_name='评论内容')),
                ('dianzan', models.IntegerField(default=0, verbose_name='点赞')),
                ('status', models.BooleanField(default=False, verbose_name='是否冻结')),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='coustmer.Commentxin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '新闻评论',
                'verbose_name_plural': '新闻评论',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Guanzhu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='关注时间')),
            ],
            options={
                'verbose_name': '关注',
                'verbose_name_plural': '关注',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Hua',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='标题')),
                ('connet', models.TextField(verbose_name='话题内容')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='发表时间')),
                ('is_shi', models.BooleanField(default=False, verbose_name='是否匿名')),
                ('status', models.BooleanField(default=False, verbose_name='是否冻结')),
                ('guanzhu_num', models.IntegerField(default=0, verbose_name='关注人数')),
                ('liu_num', models.IntegerField(default=0, verbose_name='浏览人数')),
                ('yaoqing', models.CharField(max_length=255, verbose_name='邀请人')),
                ('leibie', models.CharField(choices=[(0, '提问'), (1, '话题')], max_length=4)),
            ],
            options={
                'verbose_name': '话题',
                'verbose_name_plural': '话题',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Huafen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='话题分类')),
                ('time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('status', models.BooleanField(default=False, verbose_name='是否冻结')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '话题分类',
                'verbose_name_plural': '话题分类',
                'ordering': ['-time'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.TextField(verbose_name='私信内容')),
                ('send_date', models.DateTimeField(auto_now_add=True, verbose_name='发送时间')),
                ('is_read', models.BooleanField(default=False, verbose_name='是否读')),
                ('status', models.BooleanField(default=False, verbose_name='状态')),
                ('resce_user', models.CharField(max_length=255, verbose_name='收信人')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '私信',
                'verbose_name_plural': '私信',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='New',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='新闻标题')),
                ('desc', models.CharField(max_length=50, verbose_name='新闻描述')),
                ('content', models.TextField(verbose_name='新闻内容')),
                ('click_count', models.IntegerField(default=0, verbose_name='点击次数')),
                ('date_publish', models.DateTimeField(auto_now_add=True, verbose_name='发布时间')),
                ('is_recommend', models.BooleanField(default=False, verbose_name='是否推荐')),
                ('fenlei', models.CharField(choices=[(0, '时政'), (1, 'IT'), (2, '国际'), (3, '未分类')], default=0, max_length=4)),
                ('status', models.BooleanField(default=False, verbose_name='是否冻结')),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '新闻',
                'verbose_name_plural': '新闻',
                'ordering': ['-date_publish'],
            },
        ),
        migrations.CreateModel(
            name='Shoucang',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='收藏夹名字')),
                ('status', models.BooleanField(default=False, verbose_name='状态')),
                ('hua', models.ManyToManyField(to='coustmer.Hua')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '收藏夹名字',
                'verbose_name_plural': '收藏夹名字',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='hua',
            name='fenlei',
            field=models.ManyToManyField(to='coustmer.Huafen'),
        ),
        migrations.AddField(
            model_name='hua',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='guanzhu',
            name='guanzhu',
            field=models.ManyToManyField(to='coustmer.Hua'),
        ),
        migrations.AddField(
            model_name='guanzhu',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='caogao',
            name='neirong',
            field=models.ManyToManyField(to='coustmer.Hua'),
        ),
        migrations.AddField(
            model_name='caogao',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
